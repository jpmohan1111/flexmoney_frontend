{"version":3,"sources":["images/footer/announcement.svg","images/footer/cross.svg","component/Announcement/Announcement.js","useWindowDimensions.js"],"names":["Announcement","props","useWindowDimensions","height","width","className","src","announcement","class","behavior","scrollamount","direction","cross","onClick","React","memo","hasWindow","window","getWindowDimensions","innerWidth","innerHeight","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener"],"mappings":"0JAAe,G,OAAA,IAA0B,0CCA1B,MAA0B,kC,eCMnCA,EAAe,SAACC,GAAW,IAAD,EACJC,cADI,EACtBC,OAER,OAH8B,EACdC,MAEJ,KAER,sBAAKC,UAAU,wBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,8BACE,qBAAKC,IAAKC,EAAcF,UAAU,YAEpC,qBAAKA,UAAU,kBAAf,uCAEF,qBAAKA,UAAU,MAAf,SACE,yBACEG,MAAM,gBACNC,SAAS,SACTC,aAAa,IACbC,UAAU,OACVP,MAAM,OALR,SAOE,8BACE,sGAON,qBAAKE,IAAKM,EAAOC,QAASZ,EAAMY,QAASR,UAAU,aAMvD,8BACE,sBAAKA,UAAU,gCAAf,UACE,sBAAKA,UAAU,UAAf,UACE,8BACE,qBAAKC,IAAKC,EAAcF,UAAU,YAEpC,qBAAKA,UAAU,kBAAf,qCAGF,qBAAKA,UAAU,gBAAf,0EAIA,qBAAKC,IAAKM,EAAOC,QAASZ,EAAMY,QAASR,UAAU,gBAM5CS,cAAMC,KAAKf,I,qFCzDX,SAASE,IAEtB,IAAMc,EAA8B,qBAAXC,OAEzB,SAASC,IAGP,MAAO,CACLd,MAHYY,EAAYC,OAAOE,WAAa,KAI5ChB,OAHaa,EAAYC,OAAOG,YAAc,MANN,MAaIC,mBAASH,KAbb,mBAarCI,EAbqC,KAanBC,EAbmB,KA0B5C,OAXAC,qBAAU,WACR,GAAIR,EAAW,CACb,SAASS,IACPF,EAAoBL,KAItB,OADAD,OAAOS,iBAAiB,SAAUD,GAC3B,kBAAMR,OAAOU,oBAAoB,SAAUF,OAEnD,CAACT,IAEGM","file":"static/js/18.ea94ee62.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/announcement.fde7656c.svg\";","export default __webpack_public_path__ + \"static/media/cross.3a81dc4b.svg\";","import React from \"react\";\r\nimport \"./style.less\";\r\n// import announcement from \"../../images/footer/announcement.svg\";\r\nimport announcement from \"../../images/footer/announcement.svg\";\r\nimport cross from \"../../images/footer/cross.svg\";\r\nimport useWindowDimensions from \"../../useWindowDimensions\";\r\nconst Announcement = (props) => {\r\n  const { height, width } = useWindowDimensions();\r\n\r\n  if (width < 1024) {\r\n    return (\r\n      <div className=\"marquee_strip_box d-f\">\r\n        <div className=\"d-f a-c\">\r\n          <div>\r\n            <img src={announcement} className=\"animg\" />\r\n          </div>\r\n          <div className=\"announcementTxt\">Announcements&nbsp;|&nbsp;</div>\r\n        </div>\r\n        <div className=\"w-f\">\r\n          <marquee\r\n            class=\"marquee_strip\"\r\n            behavior=\"scroll\"\r\n            scrollamount=\"3\"\r\n            direction=\"left\"\r\n            width=\"100%\"\r\n          >\r\n            <div>\r\n              <span>\r\n                We're excited to announce Series A investment for Flexmoney.\r\n              </span>\r\n            </div>\r\n          </marquee>\r\n        </div>\r\n\r\n        <img src={cross} onClick={props.onClick} className=\"cross\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"marquee_strip_box j-c d-f a-c\">\r\n        <div className=\"d-f a-c\">\r\n          <div>\r\n            <img src={announcement} className=\"animg\" />\r\n          </div>\r\n          <div className=\"announcementTxt\">Announcements |&nbsp; </div>\r\n        </div>\r\n\r\n        <div className=\"weareproudTxt\">\r\n          We're excited to announce Series A investment for Flexmoney.\r\n        </div>\r\n\r\n        <img src={cross} onClick={props.onClick} className=\"cross\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Announcement);\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport default function useWindowDimensions() {\r\n\r\n  const hasWindow = typeof window !== 'undefined';\r\n\r\n  function getWindowDimensions() {\r\n    const width = hasWindow ? window.innerWidth : null;\r\n    const height = hasWindow ? window.innerHeight : null;\r\n    return {\r\n      width,\r\n      height,\r\n    };\r\n  }\r\n\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    if (hasWindow) {\r\n      function handleResize() {\r\n        setWindowDimensions(getWindowDimensions());\r\n      }\r\n\r\n      window.addEventListener('resize', handleResize);\r\n      return () => window.removeEventListener('resize', handleResize);\r\n    }\r\n  }, [hasWindow]);\r\n\r\n  return windowDimensions;\r\n}\r\n"],"sourceRoot":""}